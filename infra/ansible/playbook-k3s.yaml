- name: K3s Cluster Setup
  hosts: all
  become: true

  tasks:
  - name: Ensure net-tools are installed
    apt:
      name: net-tools
      state: present

  - name: Check if UFW is installed
    apt:
      name: ufw
      state: present
    register: ufw_installed

  - name: Stop and disable UFW service
    service:
      name: ufw
      state: stopped
      enabled: no
    when: ufw_installed is succeeded

  - name: Check if k3s is installed
    command: k3s --version
    register: k3s_installed
    ignore_errors: true

  - name: Install k3s if not installed
    shell: |
      curl -sfL https://get.k3s.io | sh -
    when: k3s_installed.rc != 0

  - name: Ensure k3s service is running
    systemd:
      name: k3s
      state: started
      enabled: true

  - name: Ensure /etc/rancher/k3s directory exists
    ansible.builtin.file:
      path: /etc/rancher/k3s
      state: directory
      mode: '0755'

  - name: Create config.yaml if it does not exist
    ansible.builtin.copy:
      dest: /etc/rancher/k3s/config.yaml
      content: |
        tls-san:
      force: no
      mode: '0644'

  - name: Add the inventory hostname to the tls-san section
    ansible.builtin.lineinfile:
      path: /etc/rancher/k3s/config.yaml
      insertafter: '^tls-san:'
      line: "  - \"{{ inventory_hostname }}\""
      state: present

  - name: Restart k3s service to apply new certificates
    ansible.builtin.systemd:
      name: k3s
      state: restarted
      enabled: true

  - name: Ensure local directory exists for storing kubeconfig
    delegate_to: localhost
    ansible.builtin.file:
      path: "{{ playbook_dir }}/kubeconfigs"
      state: directory
      mode: '0755'
    become: false

  - name: Fetch the k3s kubeconfig file
    ansible.builtin.fetch:
      src: /etc/rancher/k3s/k3s.yaml
      dest: "{{ playbook_dir }}/kubeconfigs/k3s_{{ inventory_hostname }}.yaml"
      flat: yes
      mode: '0644'

  - name: Replace server address in kubeconfig (if necessary)
    delegate_to: localhost
    ansible.builtin.replace:
      path: "{{ playbook_dir }}/kubeconfigs/k3s_{{ inventory_hostname }}.yaml"
      regexp: '127\.0\.0\.1'
      replace: "{{ inventory_hostname }}"
    when: "'127.0.0.1' in lookup('file', playbook_dir + '/kubeconfigs/k3s_' + inventory_hostname + '.yaml')"
    become: false

  - name: Provide instructions on how to set KUBECONFIG
    delegate_to: localhost
    ansible.builtin.debug:
      msg: "Kubeconfig saved to {{ playbook_dir }}/kubeconfigs/k3s_{{ inventory_hostname }}.yaml. To use it, run: export KUBECONFIG={{ playbook_dir }}/kubeconfigs/k3s_{{ inventory_hostname }}.yaml"
