name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:    
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup and Cache Go
        uses: actions/setup-go@v4
        with:
          go-version-file: ./go.mod
        id: go

      - name: Start test Database server
        run: |
          docker run --rm -d -e POSTGRES_PASSWORD=unittest -e POSTGRES_USER=postgres  -p 5432:5432 postgres:16.1
        id: testdb

      - name: Run Tests
        run: |
          go test -v ./...

  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: geapex/domain-os:${{ github.sha }}
          cache-from: type=registry,ref=geapex/domain-os:buildcache
          cache-to: type=registry,ref=geapex/domain-os:buildcache,mode=max

  integrationtests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: build-images
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Run Integration Tests
        run: docker compose -f docker-compose-ci.yml up --abort-on-container-exit --exit-code-from test
        env:
          OPENEXCHANGERATES_APP_ID: ${{ secrets.OPENEXCHANGERATES_APP_ID }}
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
          POSTMAN_COLLECTION_ID: ${{ vars.POSTMAN_COLLECTION_ID }}
          POSTMAN_ENVIRONMENT_ID: ${{ vars.POSTMAN_ENVIRONMENT_ID }}
          DB_HOST: domain-os-db-1
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASS: unittest
          DB_NAME: integrationtests
          API_PORT: 8080
          API_HOST: domain-os-admin-api-1
          BRANCH: ${{ github.sha }}
          ENV: CI
          GIN_MODE: debug

  retag:
    name: Retag images
    runs-on: ubuntu-latest
    needs: integrationtests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: geapex/domain-os:latest
          cache-from: type=registry,ref=geapex/domain-os:buildcache
          cache-to: type=registry,ref=geapex/domain-os:buildcache,mode=max